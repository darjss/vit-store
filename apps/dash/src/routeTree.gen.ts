/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as DashRouteRouteImport } from './routes/_dash/route'
import { Route as DashIndexRouteImport } from './routes/_dash/index'
import { Route as DashOrderRouteImport } from './routes/_dash/order'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DashRouteRoute = DashRouteRouteImport.update({
  id: '/_dash',
  getParentRoute: () => rootRouteImport,
} as any)
const DashIndexRoute = DashIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashRouteRoute,
} as any)
const DashOrderRoute = DashOrderRouteImport.update({
  id: '/order',
  path: '/order',
  getParentRoute: () => DashRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/login': typeof LoginRoute
  '/order': typeof DashOrderRoute
  '/': typeof DashIndexRoute
}
export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/order': typeof DashOrderRoute
  '/': typeof DashIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_dash': typeof DashRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/_dash/order': typeof DashOrderRoute
  '/_dash/': typeof DashIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/login' | '/order' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/login' | '/order' | '/'
  id: '__root__' | '/_dash' | '/login' | '/_dash/order' | '/_dash/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  DashRouteRoute: typeof DashRouteRouteWithChildren
  LoginRoute: typeof LoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dash': {
      id: '/_dash'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dash/': {
      id: '/_dash/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof DashIndexRouteImport
      parentRoute: typeof DashRouteRoute
    }
    '/_dash/order': {
      id: '/_dash/order'
      path: '/order'
      fullPath: '/order'
      preLoaderRoute: typeof DashOrderRouteImport
      parentRoute: typeof DashRouteRoute
    }
  }
}

interface DashRouteRouteChildren {
  DashOrderRoute: typeof DashOrderRoute
  DashIndexRoute: typeof DashIndexRoute
}

const DashRouteRouteChildren: DashRouteRouteChildren = {
  DashOrderRoute: DashOrderRoute,
  DashIndexRoute: DashIndexRoute,
}

const DashRouteRouteWithChildren = DashRouteRoute._addFileChildren(
  DashRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  DashRouteRoute: DashRouteRouteWithChildren,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
