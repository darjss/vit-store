---
interface Props {
	product: {
		id: string;
		name: string;
		badge: string;
		price: number;
		originalPrice?: number | null;
		specs: string[];
		brand: string;
		color: string;
		inStock: boolean;
	};
	badgeStyle?: "featured" | "new" | "discount";
}

const { product: p, badgeStyle = "featured" } = Astro.props;

const badgeClasses = {
	featured: "bg-secondary text-secondary-foreground",
	new: "bg-accent text-accent-foreground",
	discount: "bg-destructive text-destructive-foreground",
};

const badgeEmoji = {
	featured: "⭐",
	new: "✨",
	discount: "🔥",
};
---

<div class="group relative block rounded-sm border-3 sm:border-4 border-black bg-white shadow-[4px_4px_0_0_#000] sm:shadow-[8px_8px_0_0_#000] hover:shadow-[2px_2px_0_0_#000] sm:hover:shadow-[4px_4px_0_0_#000] hover:translate-x-[2px] sm:hover:translate-x-[4px] hover:translate-y-[2px] sm:hover:translate-y-[4px] transition-all" aria-label={`${p.name} by ${p.brand}`}>
	<a href={`/product/${p.id}`} class="focus:outline-none focus:ring-2 focus:ring-black/40">
		<div class="relative aspect-[4/3] overflow-hidden border-b-3 sm:border-b-4 border-black" style={`background:${p.color}`}>
			<div class="absolute inset-0 bg-[radial-gradient(circle_at_20%_20%,rgba(0,0,0,0.07)_2px,transparent_0)] bg-[size:14px_14px]"></div>
			<div class={`absolute left-2 sm:left-3 top-2 sm:top-3 rounded-sm border-2 border-black ${badgeClasses[badgeStyle]} px-2 sm:px-3 py-1 sm:py-1.5 text-[10px] sm:text-xs font-black uppercase shadow-[2px_2px_0_0_#000] sm:shadow-[3px_3px_0_0_#000]`}>
				{badgeEmoji[badgeStyle]} {p.badge}
			</div>
			<div class="absolute bottom-2 sm:bottom-3 right-2 sm:right-3 rounded-full border-2 border-black bg-white px-2 sm:px-3 py-0.5 sm:py-1 text-[9px] sm:text-[10px] font-black uppercase shadow-[2px_2px_0_0_#000] sm:shadow-[3px_3px_0_0_#000]">{p.brand}</div>
		</div>
		<div class="p-3 sm:p-5">
			<h3 class="mb-1.5 sm:mb-2 text-sm sm:text-lg font-black leading-tight sm:leading-snug group-hover:underline line-clamp-2">{p.name}</h3>
			<div class="mb-2 sm:mb-3 text-[10px] sm:text-xs text-black/60 font-semibold line-clamp-1">
				{p.specs.join(" · ")}
			</div>
			<div class="flex items-center justify-between gap-2">
				<div class="flex items-center gap-1 sm:gap-2">
					{p.originalPrice && (
						<div class="text-xs sm:text-lg font-bold text-black/40 line-through">€{p.originalPrice.toFixed(2)}</div>
					)}
					<div class:list={[
						"font-black",
						p.originalPrice ? "text-lg sm:text-2xl text-destructive" : "text-lg sm:text-2xl"
					]}>
						€{p.price.toFixed(2)}
					</div>
				</div>
			</div>
		</div>
	</a>
	{p.inStock && (
		<button 
			class="absolute bottom-3 right-3 sm:bottom-5 sm:right-5 rounded-sm border-2 border-black bg-primary hover:bg-primary/90 px-2 sm:px-3 py-1.5 sm:py-2 text-[10px] sm:text-xs font-black uppercase shadow-[2px_2px_0_0_#000] hover:translate-x-[1px] hover:translate-y-[1px] hover:shadow-[1px_1px_0_0_#000] transition-all active:scale-95"
			onclick="event.preventDefault(); alert('Add to cart: ' + this.dataset.product)"
			data-product={p.name}
		>
			🛒
		</button>
	)}
</div>

